{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arkarhtetmyint/Projects/ReactNative/rn-complete-guide/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      courseGoals = _useState2[0],\n      setCourseGoals = _useState2[1];\n\n  var addGoHandler = function addGoHandler() {\n    setCourseGoals(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        id: Math.random().toString(),\n        value: enteredGoal\n      }]);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    data: courseGoals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(GoalItem, {\n        title: itemData.item.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  }\n});","map":{"version":3,"sources":["/Users/arkarhtetmyint/Projects/ReactNative/rn-complete-guide/App.js"],"names":["StatusBar","React","useState","GoalItem","GoalInput","App","courseGoals","setCourseGoals","addGoHandler","currentGoals","id","Math","random","toString","value","enteredGoal","styles","screen","item","index","itemData","StyleSheet","create","padding"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAWA,OAAOC,QAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,cAAc,CAAC,UAACE,YAAD;AAAA,0CACVA,YADU,IAEb;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,QAAAA,KAAK,EAAEC;AAAvC,OAFa;AAAA,KAAD,CAAd;AAID,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBD,IAAI,CAACR,EAAtB;AAAA,KADhB;AAEE,IAAA,IAAI,EAAEJ,WAFR;AAGE,IAAA,UAAU,EAAE,oBAACc,QAAD;AAAA,aAAc,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,QAAQ,CAACF,IAAT,CAAcJ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD;AAED,IAAME,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,OAAO,EAAE;AADH;AADuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\n\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\n\nexport default function App() {\n  \n  const [courseGoals, setCourseGoals] = useState([]);\n\n \n  const addGoHandler = () => {\n    setCourseGoals((currentGoals) => [\n      ...currentGoals,\n      { id: Math.random().toString(), value: enteredGoal },\n    ]);\n  };\n\n  return (\n    <View style={styles.screen}>\n      \n      <FlatList\n        keyExtractor={(item, index) => item.id}\n        data={courseGoals}\n        renderItem={(itemData) => <GoalItem title={itemData.item.value} />}\n      ></FlatList>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n  },\n  \n});\n"]},"metadata":{},"sourceType":"module"}