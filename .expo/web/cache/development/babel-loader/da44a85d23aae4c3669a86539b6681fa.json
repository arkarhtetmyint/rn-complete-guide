{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arkarhtetmyint/Projects/ReactNative/rn-complete-guide/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      courseGoals = _useState2[0],\n      setCourseGoals = _useState2[1];\n\n  var addGoHandler = function addGoHandler(goTitle) {\n    setCourseGoals(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        id: Math.random().toString(),\n        value: goTitle\n      }]);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(GoalInput, {\n    onAddGo: addGoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    data: courseGoals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(GoalItem, {\n        onPress: function onPress() {\n          return console.Console(\"Does it work?\");\n        },\n        title: itemData.item.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  }\n});","map":{"version":3,"sources":["/Users/arkarhtetmyint/Projects/ReactNative/rn-complete-guide/App.js"],"names":["StatusBar","React","useState","GoalItem","GoalInput","App","courseGoals","setCourseGoals","addGoHandler","goTitle","currentGoals","id","Math","random","toString","value","styles","screen","item","index","itemData","console","Console","StyleSheet","create","padding"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAWA,OAAOC,QAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChCF,IAAAA,cAAc,CAAC,UAACG,YAAD;AAAA,0CACVA,YADU,IAEb;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,QAAAA,KAAK,EAAEN;AAAvC,OAFa;AAAA,KAAD,CAAd;AAID,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAET,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACU,IAAD,EAAOC,KAAP;AAAA,aAAiBD,IAAI,CAACP,EAAtB;AAAA,KADhB;AAEE,IAAA,IAAI,EAAEL,WAFR;AAGE,IAAA,UAAU,EAAE,oBAACc,QAAD;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACC,OAAR,CAAgB,eAAhB,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAEF,QAAQ,CAACF,IAAT,CAAcH,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAeD;AAED,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,OAAO,EAAE;AADH;AADuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\n\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\n\nexport default function App() {\n  const [courseGoals, setCourseGoals] = useState([]);\n\n  const addGoHandler = (goTitle) => {\n    setCourseGoals((currentGoals) => [\n      ...currentGoals,\n      { id: Math.random().toString(), value: goTitle },\n    ]);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <GoalInput onAddGo={addGoHandler} />\n      <FlatList\n        keyExtractor={(item, index) => item.id}\n        data={courseGoals}\n        renderItem={(itemData) => (\n          <GoalItem\n            onPress={() => console.Console(\"Does it work?\")}\n            title={itemData.item.value}\n          />\n        )}\n      ></FlatList>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}